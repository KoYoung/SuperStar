<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	">
	<context:component-scan base-package="com.service" />
	<!-- 1. 数据源 : DriverManagerDataSource -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" scope="singleton">
		<property name="driverClassName" value="${j.className}" />
		<property name="url" value="${j.url}" />
		<property name="username" value="${j.username}" />
		<property name="password" value="${j.password}" />
	</bean>
	<!--2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源 MyBatis定义数据源,同意加载配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- mybatis配置文件路径 -->
		<property name="configLocation" value="classpath:mybatisConfig.xml" />
		<!-- 扫描所有mybatis映射文件 -->
		<property name="mapperLocations" value="classpath:com/**/*.xml" />
	</bean>
	<!-- 3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory 
		basePackage:指定sql映射文件/接口所在的包（自动扫描） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="serviceAdvice" class="com.advice.ServiceAdvice"></bean>
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 声明事物 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 设置事物处理方式 -->
	<tx:advice id="tx" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="select*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置AOP -->
	<!-- <aop:config> <aop:pointcut expression="execution(* com.serviceimpl.*.*(..) 
		)" id="serAdvice"/> <aop:aspect ref="serviceAdvice"> <aop:before method="before" 
		pointcut-ref="serAdvice"/> </aop:aspect> </aop:config> -->
	<aop:config>
		<!-- 设置切入点 -->
		<aop:pointcut expression="execution(* com.service.*.*.impl.*.*(..))"
			id="p2" />
		<!-- 设置通知 -->
		<aop:advisor advice-ref="tx" pointcut-ref="p2" />
	</aop:config>
</beans>